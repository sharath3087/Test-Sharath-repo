name: ezMigrate Stage Environment Build-&-Deploy

on:
  workflow_dispatch:

permissions: write-all

env:
  JAVA_VERSION: "8"

jobs:
  create-release-tag:
    permissions:
      contents: write
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GH_TOKEN }}

      - name: Create tag and release
        id: create_release
        uses: ncipollo/release-action@v1.14.0
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: ${{ steps.tag_version.outputs.new_tag }}
          prerelease: true
          generateReleaseNotes: true
          token: ${{ secrets.GH_TOKEN }}

      - name: Check Output Parameters
        run: |
          echo "Got tag name ${{ steps.tag_version.outputs.new_tag }}"
          echo "Got release version ${{ steps.tag_version.outputs.new_tag }}"
          echo "RELEASE_TAG in create-release-tag job: ${{ steps.tag_version.outputs.new_tag }}"
          echo "Release upload URL: ${{ steps.create_release.outputs.upload_url }}"
          echo "Release output:"
          echo "${{ toJson(steps.create_release.outputs) }}"
          for key in $(echo "${{ toJson(steps.create_release.outputs) }}" | jq -r "keys_unsorted[]"); do
            value=$(echo "${{ toJson(steps.create_release.outputs) }}" | jq -r ".$key")
            echo "$key: $value"
          done

    outputs:
      LATEST_RELEASE_VERSION: ${{ steps.tag_version.outputs.new_tag }}
      UPLOAD_URL: ${{ steps.create_release.outputs.upload_url }}
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT

      - name: Get Commit Short Hash
        id: hash
        run: echo "hash=$(git rev-parse --short \"$RELEVANT_SHA\")" >> $GITHUB_OUTPUT
        env:
          RELEVANT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Get Latest tag
        id: current_tag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - name: Get next minor version
        id: next_tag
        uses: WyriHaximus/github-action-next-semvers@v1
        with:
          version: ${{ steps.current_tag.outputs.tag }}

      - name: Use Node.js 22.14.0
        uses: actions/setup-node@v3
        with:
          node-version: "22.14.0"

      - name: Build Angular Integration web app for Production 
        run: |
          npm install
          npm run build:prod
          pwd
          ls -ltr
          mv dist/demo-angular-app/browser/* dist/demo-angular-app
          rm -rf dist/demo-angular-app/browser
          ls -ltr dist/
          echo "Released ${{ steps.next_tag.outputs.patch }} Build - Prod" > ./dist/demo-angular-app/ReleaseVersion.txt
          
      - name: Upload ezMigrate Prod Zip Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ezMigrate-Prod-Zip-Artifacts-${{ steps.date.outputs.date }}
          path: |
            ./dist/

      - name: Build Angular Integration web app for QA 
        run: |
          npm install
          npm run build:qa
          pwd
          ls -ltr
          mv dist/demo-angular-app/browser/* dist/demo-angular-app
          rm -rf dist/demo-angular-app/browser
          ls -ltr dist/
          echo "Released ${{ steps.next_tag.outputs.patch }} Build - QA" > ./dist/demo-angular-app/ReleaseVersion.txt
          
      - name: Upload ezMigrate QA Zip Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ezMigrate-QA-Artifacts-${{ steps.date.outputs.date }}
          path: |
            ./dist/
